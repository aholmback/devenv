---
- name: Make sure stuff that needs to be present later is present now
  become: yes
  apt:
    pkg: "{{item}}"
    state: present
  with_items:
    - apt-transport-https
    - ca-certificates

- name: Add Docker apt key.
  become: yes
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present
  register: add_repository_key
  ignore_errors: true

- name: Add Docker repository.
  become: yes
  apt_repository:
    repo: "{{ docker_apt_repository }}"
    state: present
    update_cache: yes

- name: Add Nodesource apt key.
  become: yes
  apt_key:
    url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
    id: "68576280"
    state: present

- name: Add NodeSource repositories for Node.js {{ ansible_distribution_release }}.
  become: yes
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - "deb https://deb.nodesource.com/node_9.x {{ ansible_distribution_release }} main"
    - "deb-src https://deb.nodesource.com/node_9.x {{ ansible_distribution_release }} main"

- name: Update system
  become: yes
  apt:
    update_cache: true
    upgrade: dist

- name: Update/install debian packages
  become: yes
  apt:
    pkg: "{{item}}"
    state: latest
  with_items:
    - build-essential
    - libssl-dev
    - python3-dev
    - libffi-dev
    - libpq-dev
    - zlib1g-dev
    - bash-completion
    - less
    - vim
    - git
    - unzip
    - screen
    - python-pip
    - silversearcher-ag
    - nodejs
    - docker-ce
    - postgresql-client

- name: Update/install global node packages
  become: yes
  npm:
    name: "{{ item }}"
    global: yes
    state: latest
  with_items:
    - pm2
    - "@frctl/fractal"

- name: Update/install global pip packages
  become: yes
  pip:
    name: "{{ item }}"
    state: latest
  with_items:
    - virtualenv
    - ansible

- name: Configure git
  template:
    src: .gitconfig
    dest: "{{ home }}/.gitconfig"

- name: Configure bash
  template:
    src: .bash_profile
    dest: "{{ home }}/.bash_profile"

- name: Create directory for vim plugins
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ home }}/.vim/bundle"

- name: Configure vim
  template:
    src: vimrc
    dest: "{{ home }}/.vim/"

- name: Install vim plugins
  git:
      repo: https://github.com/{{ item.account }}/{{ item.name }}.git
      dest: "{{ home }}/.vim/bundle/{{ item.name }}"
  with_items:
      - { name: vim-pathogen, account: tpope }
      - { name: nerdtree, account: scrooloose }
      - { name: ctrlp.vim, account: kien }
      - { name: ale, account: w0rp }
      - { name: ack.vim, account: mileszs }
      - { name: vim-colorschemes, account: flazz }
      - { name: vim-javascript, account: pangloss }
      - { name: vim-mustache-handlebars, account: mustache }

- name: Install ngrok
  become: yes
  unarchive:
      src: "https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip"
      dest: /usr/local/bin/
      remote_src: yes

- name: Install ngrok authtoken
  command: /usr/local/bin/ngrok authtoken YYU3TGTkWmhcK6JgaC8w_28kWUHCTMvcBUeTdxPZHC

- name: Create/verify ~/.ssh
  file:
    path: "{{ item }}"
    state: directory
  with_items:
      - "{{ home }}/.ssh"

- name: Copy id_rsa
  copy:
    src: ~/.ssh/id_rsa
    dest: "{{ home }}/.ssh/id_rsa"
    mode: 0600
